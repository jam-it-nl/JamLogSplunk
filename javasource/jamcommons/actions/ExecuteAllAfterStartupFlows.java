// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package jamcommons.actions;

import java.util.Set;
import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import jamcommons.JamCommons;

/**
 * Execute all flows found with the name "AfterStartup"
 */
public class ExecuteAllAfterStartupFlows extends CustomJavaAction<java.lang.Boolean>
{
	public ExecuteAllAfterStartupFlows(IContext context)
	{
		super(context);
	}

	@java.lang.Override
	public java.lang.Boolean executeAction() throws Exception
	{
		// BEGIN USER CODE
		Set<String> microflows = Core.getMicroflowNames();

		microflows.stream().filter(microflow -> {
			return !microflow.startsWith("JamCommons.") && microflow.endsWith(".AfterStartup");
		}).forEach(microflow -> {
			Core.microflowCall(microflow).execute(this.getContext());
			Core.getLogger("Core").info("Successfully ran after-startup-action " + microflow);
		});

		microflows.stream().filter(microflow -> {
			return !microflow.startsWith("JamCommons.") && microflow.endsWith(".BackgroundAfterStartup");
		}).forEach(microflow -> {
			JamCommons.runMicroflowAsyncInQueue(this.getClass().getSimpleName(), microflow);
			Core.getLogger("Core").info("Successfully started background after-startup-action " + microflow);
		});

		return true;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "ExecuteAllAfterStartupFlows";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
