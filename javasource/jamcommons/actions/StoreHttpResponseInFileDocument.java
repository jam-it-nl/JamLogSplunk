// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package jamcommons.actions;

import java.io.InputStream;
import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.webui.CustomJavaAction;
import jamcommons.proxies.Header;
import nl.jam.mendix.library.lib.http.DownloadFile;

public class StoreHttpResponseInFileDocument extends CustomJavaAction<java.lang.Boolean>
{
	private java.lang.String url;
	private java.util.List<IMendixObject> __headers;
	private java.util.List<jamcommons.proxies.Header> headers;
	private IMendixObject __fileDocument;
	private system.proxies.FileDocument fileDocument;
	private java.lang.String fileName;

	public StoreHttpResponseInFileDocument(IContext context, java.lang.String url, java.util.List<IMendixObject> headers, IMendixObject fileDocument, java.lang.String fileName)
	{
		super(context);
		this.url = url;
		this.__headers = headers;
		this.__fileDocument = fileDocument;
		this.fileName = fileName;
	}

	@java.lang.Override
	public java.lang.Boolean executeAction() throws Exception
	{
		this.headers = new java.util.ArrayList<jamcommons.proxies.Header>();
		if (__headers != null)
			for (IMendixObject __headersElement : __headers)
				this.headers.add(jamcommons.proxies.Header.initialize(getContext(), __headersElement));

		this.fileDocument = __fileDocument == null ? null : system.proxies.FileDocument.initialize(getContext(), __fileDocument);

		// BEGIN USER CODE

		Map<String, String> headersMap = new HashMap<String, String>();
		for (Header header : headers) {
			headersMap.put(header.getKey(), header.getValue());
		}

		DownloadFile downloadFile = new DownloadFile();
		InputStream inputStream = downloadFile.download(url, headersMap);

		if (inputStream != null) {
			Core.storeFileDocumentContent(getContext(), fileDocument.getMendixObject(), fileName, inputStream);
		}

		return true;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "StoreHttpResponseInFileDocument";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
